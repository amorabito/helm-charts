---
# App settings
app:
  global:
    image: wger/server:latest
    imagePullPolicy: Always
    annotations: {}
    replicas: 1
  persistence:
    enabled: false
    storageClass: null
    accessModes:
      - ReadWriteMany
    size: 8Gi
    annotations: {}
    existingClaim:
      enabled: false
      media: null # if not set wger-media is taken
      static: null # if not set wger-static is taken
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m
  django:
    secret:
      name: null # if not set .Release.Name is set
      secretKey: null # if not set a random one is generated
  environment:
    - name: TIME_ZONE
      value: UTC
    - name: ENABLE_EMAIL
      value: "False"
    - name: EMAIL_BACKEND
      value: "django.core.mail.backends.console.EmailBackend"
    - name: EMAIL_HOST
      value: None
    - name: EMAIL_PORT
      value: 587
    - name: EMAIL_HOST_USER
      value: None
    - name: EMAIL_HOST_PASSWORD
      value: None
    - name: FROM_EMAIL
      value: test@test.com
    - name: SYNC_EXERCISES_ON_STARTUP
      value: "False"
    - name: DOWNLOAD_EXERCISE_IMAGES_ON_STARTUP
      value: "False"
    - name: ALLOW_REGISTRATION
      value: "False"
    - name: ALLOW_GUEST_USERS
      value: "False"
    - name: CSRF_TRUSTED_ORIGINS
      value: "http://127.0.0.1,http://localhost,https://localhost"

ingress:
  enabled: false
  url: fit.example.com
  tls: true
  annotations: {}

service:
  annotations: {}
  type: ClusterIP
  port: 8000

# PostgreSQL Settings for groundhog2k chart. Only a minimum has been specified below.
# For more options, see https://github.com/groundhog2k/helm-charts/tree/master/charts/postgres
postgres:
  # Note: keep these variables present as the chart uses them for the Deployment
  enabled: true
  settings:
    superuser: wger
    superuserPassword: wger
  userDatabase:
    name: wger
  service:
    port: 5432
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  ## Storage parameters
  storage:
    ##  Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:
    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    requestedSize: 8Gi
    ## the storage class name
    className:

# Redis Settings for groundhog2k chart. Only a minimum has been specified below.
# For more options, see https://github.com/groundhog2k/helm-charts/tree/master/charts/redis
redis:
  # Note: keep these variables present as the chart uses them for the Deployment
  enabled: true
  auth:
    enabled: false
    password: wger
  storage:
    ##  Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:
    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    ## five times (5x) the amount of memory (RAM)
    requestedSize: 10Gi
    ## the storage class name
    className:
  service:
    serverPort: 6379

  # For later when redis password in wger is implemented
  # enable .Values.redis.auth.enabled and set the following
  # env and arg
  #
  ## Additional environment variables
  # env:
  #   - name: REDIS_PASSWORD
  #     valueFrom:
  #       secretKeyRef:
  #         name: redis
  #         key: redis-password
  ## Arguments for the container entrypoint process
  # args:
  #   - "--requirepass $(REDIS_PASSWORD)"
