---
# App settings
app:
  global:
    image:
      registry: docker.io
      repository: wger/server
      # when tag left emtpy the Chart appversion will be taken
      # wger is developed as a rolling release
      tag: latest
      PullPolicy: Always
    annotations: {}
    replicas: 1
    securityContext:
      fsGroup: 1000
  persistence:
    enabled: false
    storageClass: null
    accessModes:
      - ReadWriteMany
    size: 8Gi
    annotations: {}
    existingClaim:
      enabled: false
      media: null
      static: null
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m
  # when nginx is enabled persistent volumes are required
  # and therefore automatically enabled
  nginx:
    enabled: false
    image: nginx:stable
    imagePullPolicy: IfNotPresent
  django:
    secret:
      name: null
      key: null
    cache:
      # in seconds - 60*60*24*15, 15 Days
      timeout: 1296000
  #
  # JWT auth
  jwt:
    secret:
      name: null
      key: null
    # The lifetime duration of the access token, in minutes
    accessTokenLifetime: 10
    # The lifetime duration of the refresh token, in hours
    refreshTokenLifetime: 24
  #
  # Brute force login attacks
  # https://django-axes.readthedocs.io/en/latest/index.html
  axes:
    enabled: true
    failureLimit: 10
    # in minutes
    cooloffTime: 30
  environment:
    - name: TIME_ZONE
      value: UTC
    - name: ENABLE_EMAIL
      value: "False"
    - name: EMAIL_HOST
      value: None
    - name: EMAIL_PORT
      value: 587
    - name: EMAIL_HOST_USER
      value: None
    - name: EMAIL_HOST_PASSWORD
      value: None
    - name: FROM_EMAIL
      value: test@test.com
    # Wger instance from which to sync exercises, images, etc.
    - name: WGER_INSTANCE
      value: "https://wger.de"
    - name: SYNC_EXERCISES_ON_STARTUP
      value: "False"
    - name: DOWNLOAD_EXERCISE_IMAGES_ON_STARTUP
      value: "False"
    - name: ALLOW_UPLOAD_VIDEOS
      value: "True"
    # Users won't be able to contribute to exercises if their account age is
    # lower than this amount in days.
    - name: MIN_ACCOUNT_AGE_TO_TRUST
      value: "21"
    - name: ALLOW_REGISTRATION
      value: "False"
    - name: ALLOW_GUEST_USERS
      value: "False"
    - name: DJANGO_PERFORM_MIGRATIONS
      value: "True"
    - name: GUNICORN_CMD_ARGS
      value: "--timeout 240"
    - name: CSRF_TRUSTED_ORIGINS
      value: "http://127.0.0.1,https://127.0.0.1,http://localhost,https://localhost"

ingress:
  enabled: false
  url: fit.example.com
  tls: true
  annotations: {}

service:
  annotations: {}
  type: ClusterIP
  port: 8000

# PostgreSQL Settings for groundhog2k chart. Only a minimum has been specified below.
# For more options, see https://github.com/groundhog2k/helm-charts/tree/master/charts/postgres
postgres:
  # Note: keep these variables present as the chart uses them for the Deployment
  enabled: true
  settings:
    superuser: wger
    superuserPassword: wger
  userDatabase:
    name: wger
  service:
    port: 5432
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  ## Storage parameters
  storage:
    ##  Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:
    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    requestedSize: 8Gi
    ## the storage class name
    className:

# Redis Settings for groundhog2k chart. Only a minimum has been specified below.
# For more options, see https://github.com/groundhog2k/helm-charts/tree/master/charts/redis
redis:
  # Note: keep these variables present as the chart uses them for the Deployment
  enabled: true
  auth:
    enabled: false
    password: wger
  storage:
    ##  Set persistentVolumenClaimName to reference an existing PVC
    persistentVolumeClaimName:
    ## Alternative set requestedSize to define a size for a dynmaically created PVC
    ## five times (5x) the amount of memory (RAM)
    requestedSize: 10Gi
    ## the storage class name
    className:
  service:
    serverPort: 6379

